//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TravelOrders.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TravelOrdersEntities1 : DbContext
    {
        public TravelOrdersEntities1()
            : base("name=TravelOrdersEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ItemService> ItemServices { get; set; }
        public virtual DbSet<Service> Services { get; set; }
    
        public virtual int AddItemService(Nullable<int> serviceId, string details)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("serviceId", serviceId) :
                new ObjectParameter("serviceId", typeof(int));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddItemService", serviceIdParameter, detailsParameter);
        }
    
        public virtual int AddService(Nullable<int> vehicleId, Nullable<System.DateTime> date, Nullable<decimal> price)
        {
            var vehicleIdParameter = vehicleId.HasValue ?
                new ObjectParameter("vehicleId", vehicleId) :
                new ObjectParameter("vehicleId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddService", vehicleIdParameter, dateParameter, priceParameter);
        }
    
        public virtual int DeleteItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteItem", idParameter);
        }
    
        public virtual int DeleteService(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteService", idParameter);
        }
    
        public virtual int EditItemService(Nullable<int> serviceId, string details, Nullable<int> id)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("serviceId", serviceId) :
                new ObjectParameter("serviceId", typeof(int));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditItemService", serviceIdParameter, detailsParameter, idParameter);
        }
    
        public virtual int EditService(Nullable<int> vehicleId, Nullable<System.DateTime> date, Nullable<decimal> price, Nullable<int> id)
        {
            var vehicleIdParameter = vehicleId.HasValue ?
                new ObjectParameter("vehicleId", vehicleId) :
                new ObjectParameter("vehicleId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditService", vehicleIdParameter, dateParameter, priceParameter, idParameter);
        }
    
        public virtual ObjectResult<GetItem_Result> GetItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetItem_Result>("GetItem", idParameter);
        }
    
        public virtual ObjectResult<GetItemsPerService_Result> GetItemsPerService(Nullable<int> idService)
        {
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("idService", idService) :
                new ObjectParameter("idService", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetItemsPerService_Result>("GetItemsPerService", idServiceParameter);
        }
    
        public virtual ObjectResult<GetService_Result> GetService(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetService_Result>("GetService", idParameter);
        }
    
        public virtual ObjectResult<Service> GetServicesPerVehicle(Nullable<int> idVehcle)
        {
            var idVehcleParameter = idVehcle.HasValue ?
                new ObjectParameter("idVehcle", idVehcle) :
                new ObjectParameter("idVehcle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Service>("GetServicesPerVehicle", idVehcleParameter);
        }
    
        public virtual ObjectResult<Service> GetServicesPerVehicle(Nullable<int> idVehcle, MergeOption mergeOption)
        {
            var idVehcleParameter = idVehcle.HasValue ?
                new ObjectParameter("idVehcle", idVehcle) :
                new ObjectParameter("idVehcle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Service>("GetServicesPerVehicle", mergeOption, idVehcleParameter);
        }
    }
}
