@model TravelOrders.Models.Route

@{
    ViewBag.Title = "AddRoute";
}

<h2>AddRoute</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Route</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">

        @Html.LabelFor(model => model.TravelOrder.TravelOrderNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TravelOrder.IDTravelOrder, (SelectList)@ViewBag.travelOrder, new { @class = "form-control" })

        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ALatitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ALatitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ALatitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ALongitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ALongitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ALongitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BLatitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BLatitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BLatitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BLongitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BLongitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BLongitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.KilometeresSum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KilometeresSum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KilometeresSum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AverageSpeed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AverageSpeed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AverageSpeed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UsedFuel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UsedFuel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UsedFuel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "GetTravelOrders", "TravelOrder")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
